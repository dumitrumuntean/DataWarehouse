/*Validate duration of the flights
Flights with a duration bigger than 8 hours will not be accepted;
Flights with negative or zero time duration will not be accepted
*/
DECLARE
  CURSOR VEJLECURSOR
  IS
    (SELECT LAUNCHTIME,
      LANDINGTIME,
      PLANEREGISTRATION,
      PILOT1INIT,
      PILOT2INIT,
      LAUNCHAEROTOW,
      LAUNCHWINCH,
      LAUNCHSELFLAUNCH,
      CABLEBREAK,
      CROSSCOUNTRYKM
    FROM CHANGEDTAFLIGHTSVEJLE
    WHERE 24*(LANDINGTIME - LAUNCHTIME) <= 8
    AND 24  *(LANDINGTIME - LAUNCHTIME)  > 0
    );
  CURSOR SG70CURSOR
  IS
    (SELECT LAUNCHTIME,
      LANDINGTIME,
      PLANEREGISTRATION,
      PILOT1INIT,
      PILOT2INIT,
      LAUNCHAEROTOW,
      LAUNCHWINCH,
      LAUNCHSELFLAUNCH,
      CABLEBREAK,
      CROSSCOUNTRYKM
    FROM CHANGEDTAFLIGHTSSG70
    WHERE 24*(LANDINGTIME - LAUNCHTIME) <= 8
    AND 24  *(LANDINGTIME - LAUNCHTIME)  > 0
    );
  LAUNCHDATE  DATE;
  LANDINGDATE DATE;
  LAUNCHTIME  VARCHAR2(50);
  LANDINGTIME VARCHAR2(50);
BEGIN
  
  FOR ROW IN VEJLECURSOR
  LOOP
    SELECT TRUNC(ROW.LAUNCHTIME) INTO LAUNCHDATE FROM DUAL;
    SELECT TO_CHAR(ROW.LAUNCHTIME, 'HH24:MI:SS') INTO LAUNCHTIME FROM DUAL;
    SELECT TRUNC(ROW.LANDINGTIME) INTO LANDINGDATE FROM DUAL;
    SELECT TO_CHAR(ROW.LANDINGTIME, 'HH24:MI:SS') INTO LANDINGTIME FROM DUAL;
    INSERT
    INTO validDurationTaFlights
      (
        LAUNCHDATE,
        LAUNCHTIME,
        LANDINGDATE,
        LANDINGTIME,
        PLANEREGISTRATION,
        PILOT1INIT,
        PILOT2INIT,
        LAUNCHAEROTOW,
        LAUNCHWINCH,
        LAUNCHSELFLAUNCH,
        CABLEBREAK,
        CROSSCOUNTRYKM,
        CLUB
      )
      VALUES
      (
        LAUNCHDATE,
        LAUNCHTIME,
        LANDINGDATE,
        LANDINGTIME,
        ROW.PLANEREGISTRATION,
        ROW.PILOT1INIT,
        ROW.PILOT2INIT,
        ROW.LAUNCHAEROTOW,
        ROW.LAUNCHWINCH,
        ROW.LAUNCHSELFLAUNCH,
        ROW.CABLEBREAK,
        ROW.CROSSCOUNTRYKM,
        'VEJLE'
      );
  END LOOP;
  FOR ROW IN SG70CURSOR
  LOOP
    SELECT TRUNC(ROW.LAUNCHTIME) INTO LAUNCHDATE FROM DUAL;
    SELECT TO_CHAR(ROW.LAUNCHTIME, 'HH24:MI:SS') INTO LAUNCHTIME FROM DUAL;
    SELECT TRUNC(ROW.LANDINGTIME) INTO LANDINGDATE FROM DUAL;
    SELECT TO_CHAR(ROW.LANDINGTIME, 'HH24:MI:SS') INTO LANDINGTIME FROM DUAL;
    INSERT
    INTO validDurationTaFlights
      (
        LAUNCHDATE,
        LAUNCHTIME,
        LANDINGDATE,
        LANDINGTIME,
        PLANEREGISTRATION,
        PILOT1INIT,
        PILOT2INIT,
        LAUNCHAEROTOW,
        LAUNCHWINCH,
        LAUNCHSELFLAUNCH,
        CABLEBREAK,
        CROSSCOUNTRYKM,
        CLUB
      )
      VALUES
      (
        LAUNCHDATE,
        LAUNCHTIME,
        LANDINGDATE,
        LANDINGTIME,
        ROW.PLANEREGISTRATION,
        ROW.PILOT1INIT,
        ROW.PILOT2INIT,
        ROW.LAUNCHAEROTOW,
        ROW.LAUNCHWINCH,
        ROW.LAUNCHSELFLAUNCH,
        ROW.CABLEBREAK,
        ROW.CROSSCOUNTRYKM,
        'SG70'
      );
  END LOOP;
  
  /*THE REST OF FLIGTS WHICH ARE NOT ACCEPTED WILL BE PLACED IN AN ERROR TABLE*/  
  INSERT INTO ERRORFLIGHTS
  (
      LAUNCHTIME,
      LANDINGTIME,
      PLANEREGISTRATION,
      PILOT1INIT,
      PILOT2INIT,
      LAUNCHAEROTOW,
      LAUNCHWINCH,
      LAUNCHSELFLAUNCH,
      CABLEBREAK,
      CROSSCOUNTRYKM
  )(SELECT LAUNCHTIME,
      LANDINGTIME,
      PLANEREGISTRATION,
      PILOT1INIT,
      PILOT2INIT,
      LAUNCHAEROTOW,
      LAUNCHWINCH,
      LAUNCHSELFLAUNCH,
      CABLEBREAK,
      CROSSCOUNTRYKM
    FROM CHANGEDTAFLIGHTSVEJLE
    WHERE 24*(LANDINGTIME - LAUNCHTIME) > 8
    OR   24*(LANDINGTIME - LAUNCHTIME) <= 0
    );
    
  INSERT INTO ERRORFLIGHTS
  (
      LAUNCHTIME,
      LANDINGTIME,
      PLANEREGISTRATION,
      PILOT1INIT,
      PILOT2INIT,
      LAUNCHAEROTOW,
      LAUNCHWINCH,
      LAUNCHSELFLAUNCH,
      CABLEBREAK,
      CROSSCOUNTRYKM
  )(SELECT LAUNCHTIME,
      LANDINGTIME,
      PLANEREGISTRATION,
      PILOT1INIT,
      PILOT2INIT,
      LAUNCHAEROTOW,
      LAUNCHWINCH,
      LAUNCHSELFLAUNCH,
      CABLEBREAK,
      CROSSCOUNTRYKM
    FROM CHANGEDTAFLIGHTSSG70
    WHERE 24*(LANDINGTIME - LAUNCHTIME) > 8
    OR   24*(LANDINGTIME - LAUNCHTIME)  <= 0
    );
    
    /*COMPLETING AUDIT TABLE WITH NECESSARY INFORMATION*/
    INSERT INTO DURATIONFLIGHTSAUDIT
    (
      A_DATE,
      TOTAL_EXTRACTED,
      DROPPED,
      VALID,
      CHECKED
    )VALUES(
      SYSDATE,
      (SELECT COUNT(*) FROM (SELECT * FROM CHANGEDTAFLIGHTSSG70 UNION ALL SELECT * FROM CHANGEDTAFLIGHTSVEJLE)),
      (SELECT COUNT(*) FROM ERRORFLIGHTS),
      (SELECT COUNT(*) FROM validDurationTaFlights),
      'N'); 
END;